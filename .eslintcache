[{"F:\\Jujiu\\react\\jujiu-design\\juiu-design-doc\\src\\reportWebVitals.ts":"1","F:\\Jujiu\\react\\jujiu-design\\juiu-design-doc\\src\\App.tsx":"2","F:\\Jujiu\\react\\jujiu-design\\juiu-design-doc\\src\\layout\\index.tsx":"3","F:\\Jujiu\\react\\jujiu-design\\juiu-design-doc\\src\\index.tsx":"4","F:\\Jujiu\\react\\jujiu-design\\juiu-design-doc\\src\\components\\navigation\\index.tsx":"5","F:\\Jujiu\\react\\jujiu-design\\juiu-design-doc\\src\\router\\index.tsx":"6","F:\\Jujiu\\react\\jujiu-design\\juiu-design-doc\\src\\views\\home\\index.tsx":"7","F:\\Jujiu\\react\\jujiu-design\\juiu-design-doc\\src\\views\\button\\index.tsx":"8","F:\\Jujiu\\react\\jujiu-design\\juiu-design-doc\\src\\views\\alert\\index.tsx":"9","F:\\Jujiu\\react\\jujiu-design\\juiu-design-doc\\src\\views\\login\\index.tsx":"10","F:\\Jujiu\\react\\jujiu-design\\juiu-design-doc\\src\\utils\\getLoginState.js":"11","F:\\Jujiu\\react\\jujiu-design\\juiu-design-doc\\src\\components\\privateRoute\\index.tsx":"12","F:\\Jujiu\\react\\jujiu-design\\juiu-design-doc\\src\\utils\\BGParticle.js":"13","F:\\Jujiu\\react\\jujiu-design\\juiu-design-doc\\src\\views\\login\\loginForm.tsx":"14","F:\\Jujiu\\react\\jujiu-design\\juiu-design-doc\\src\\components\\loading\\index.tsx":"15","F:\\Jujiu\\react\\jujiu-design\\juiu-design-doc\\src\\views\\login\\registerForm.tsx":"16","F:\\Jujiu\\react\\jujiu-design\\juiu-design-doc\\src\\utils\\pagesUtils.ts":"17"},{"size":425,"mtime":1607417078246,"results":"18","hashOfConfig":"19"},{"size":596,"mtime":1616403878855,"results":"20","hashOfConfig":"19"},{"size":3235,"mtime":1616408026636,"results":"21","hashOfConfig":"19"},{"size":582,"mtime":1616403585267,"results":"22","hashOfConfig":"19"},{"size":1563,"mtime":1616407853236,"results":"23","hashOfConfig":"19"},{"size":1600,"mtime":1616405081209,"results":"24","hashOfConfig":"19"},{"size":159,"mtime":1615533266508,"results":"25","hashOfConfig":"19"},{"size":3449,"mtime":1616053886862,"results":"26","hashOfConfig":"19"},{"size":132,"mtime":1615018903614,"results":"27","hashOfConfig":"19"},{"size":1503,"mtime":1616061412767,"results":"28","hashOfConfig":"19"},{"size":188,"mtime":1614911839445,"results":"29","hashOfConfig":"19"},{"size":644,"mtime":1615974968801,"results":"30","hashOfConfig":"19"},{"size":5055,"mtime":1614925085722,"results":"31","hashOfConfig":"19"},{"size":2666,"mtime":1616060781815,"results":"32","hashOfConfig":"19"},{"size":613,"mtime":1615342301753,"results":"33","hashOfConfig":"19"},{"size":2617,"mtime":1616060598423,"results":"34","hashOfConfig":"19"},{"size":835,"mtime":1616408044949,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"weap92",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"51"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"51"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\Jujiu\\react\\jujiu-design\\juiu-design-doc\\src\\reportWebVitals.ts",[],["78","79"],"F:\\Jujiu\\react\\jujiu-design\\juiu-design-doc\\src\\App.tsx",[],"F:\\Jujiu\\react\\jujiu-design\\juiu-design-doc\\src\\layout\\index.tsx",["80","81","82","83","84","85","86"],"F:\\Jujiu\\react\\jujiu-design\\juiu-design-doc\\src\\index.tsx",[],"F:\\Jujiu\\react\\jujiu-design\\juiu-design-doc\\src\\components\\navigation\\index.tsx",["87"],"F:\\Jujiu\\react\\jujiu-design\\juiu-design-doc\\src\\router\\index.tsx",[],"F:\\Jujiu\\react\\jujiu-design\\juiu-design-doc\\src\\views\\home\\index.tsx",[],["88","89"],"F:\\Jujiu\\react\\jujiu-design\\juiu-design-doc\\src\\views\\button\\index.tsx",["90"],"import React, { FC } from 'react';\r\nimport { Button } from 'juiu-design';\r\nimport { ButtonType, ButtonSize } from 'juiu-design/dist/components/Button/button';\r\nimport './index.scss';\r\n\r\nconst ButtonView: FC = (props) => {\r\n  const code =\r\n  `  import { Button } from 'juiu-design';\r\n  import { ButtonType, ButtonSize } from 'juiu-design/dist/components/Button/button';\r\n\r\n  <Button btnType={ButtonType.Primary} size={ButtonSize.Large} onClick={e => { e.preventDefault();alert('Alert')}}\r\n  >Large Primary</Button>\r\n  <Button btnType={ButtonType.Success}>Default Success</Button>\r\n  <Button btnType={ButtonType.Warning}>Default Warning</Button>\r\n  <Button btnType={ButtonType.Danger} size={ButtonSize.Small}>Small Danger</Button>\r\n  <Button onClick={e => { e.preventDefault(); alert('Alert')}}>Default</Button>\r\n  <Button disabled>Disabled</Button>\r\n  <Button btnType={ButtonType.Link} href=\"http://www.baidu.com\" target=\"_blank\">Link</Button>\r\n  <Button btnType={ButtonType.Link} disabled >Disabled Link</Button>`\r\n  return (\r\n    <div className=\"button-view\">\r\n        <Button btnType={ButtonType.Primary} size={ButtonSize.Large} onClick={e => { e.preventDefault(); alert('Alert')}}>Large Primary</Button>&nbsp;&nbsp;\r\n        <Button btnType={ButtonType.Success}>Default Success</Button>&nbsp;&nbsp;\r\n        <Button btnType={ButtonType.Warning}>Default Warning</Button>&nbsp;&nbsp;\r\n        <Button btnType={ButtonType.Danger} size={ButtonSize.Small}>Small Danger</Button>&nbsp;&nbsp;\r\n        <Button onClick={e => { e.preventDefault(); alert('Alert')}}>Default</Button>&nbsp;&nbsp;\r\n        <Button disabled>Disabled</Button>&nbsp;&nbsp;\r\n        <Button btnType={ButtonType.Link} href=\"http://www.baidu.com\" target=\"_blank\">Link</Button>&nbsp;&nbsp;\r\n      <Button btnType={ButtonType.Link} disabled >Disabled Link</Button>\r\n      <pre className=\"button-code\">\r\n      <code>\r\n          {code}\r\n      </code>\r\n      </pre>\r\n      <table className=\"doc\">\r\n        <thead className=\"doc-header\">\r\n          <tr>\r\n            <th>参数</th>\r\n            <th>说明</th>\r\n            <th>类型</th>\r\n            <th>值</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody className=\"doc-body\">\r\n          <tr>\r\n            <td>size</td>\r\n            <td>button的规格</td>\r\n            <td>ButtonSize：string</td>\r\n            <td>Large = 'lg',\r\n              Small = 'sm'</td>\r\n          </tr>\r\n          <tr>\r\n            <td>disabled</td>\r\n            <td>是否禁用</td>\r\n            <td>boolean</td>\r\n            <td>true,false</td>\r\n          </tr>\r\n          <tr>\r\n            <td>btnType</td>\r\n            <td>button的类型</td>\r\n            <td>ButtonType：string</td>\r\n            <td>Primary = 'primary',Default = 'default',Danger = 'danger',Warning = 'warning',Success = 'success',Link = 'link'</td>\r\n          </tr>\r\n          <tr>\r\n            <td>children</td>\r\n            <td>Button标签中的子节点</td>\r\n            <td>React.ReactNode</td>\r\n            <td>-</td>\r\n          </tr>\r\n          <tr>\r\n            <td>href</td>\r\n            <td>跳转链接，只能用于btnType='link'</td>\r\n            <td>string</td>\r\n            <td>-</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\ninterface BaseButtonProps {\r\n  className?: string;\r\n  size?: ButtonSize;\r\n  disabled?: boolean;\r\n  btnType?: ButtonType;\r\n  children: React.ReactNode;\r\n  href?: string\r\n}\r\nexport default ButtonView","F:\\Jujiu\\react\\jujiu-design\\juiu-design-doc\\src\\views\\alert\\index.tsx",[],["91","92"],"F:\\Jujiu\\react\\jujiu-design\\juiu-design-doc\\src\\views\\login\\index.tsx",["93"],"import { FC, useEffect, useState, createContext } from 'react';\r\nimport BGParticle from '../../utils/BGParticle'\r\nimport './style.scss'\r\nimport LoginForm from './loginForm';\r\nimport Loading from '../../components/loading/index';\r\nimport RegisterForm from './registerForm';\r\nimport { Button } from 'juiu-design';\r\n\r\ninterface ILoginContext {\r\n  ChangeLoad?: (val: boolean) => void,\r\n  ChangeLoginView?: (val: boolean) => void,\r\n}\r\n\r\nexport const LoginContext = createContext<ILoginContext>({})\r\n\r\nconst Login:FC = () => {\r\n  const [loading, setLoading] = useState(false)\r\n  const [isLoginView, setIsLoginView] =  useState(true)\r\n  useEffect  (() => {\r\n    let particle = new BGParticle('login')\r\n    particle.init()\r\n    return () => {\r\n      particle.destory()\r\n    }\r\n  })\r\n\r\n  const changeLoading = (val: boolean) => {\r\n    setLoading(val)\r\n  }\r\n\r\n  const changeLoginView = (val: boolean) => {\r\n    setIsLoginView(val)\r\n  }\r\n\r\n  const providerContext:ILoginContext = {\r\n    ChangeLoad: changeLoading,\r\n    ChangeLoginView: changeLoginView\r\n  }\r\n  return (\r\n    <div id=\"login\" className=\"login\">\r\n      <div className=\"content\">\r\n        <LoginContext.Provider value={ providerContext }>\r\n          <LoginForm className={isLoginView ? 'box showBox' : 'box hiddenBox' } />\r\n          <RegisterForm className={isLoginView ? 'box hiddenBox' : 'box showBox'} />\r\n        </LoginContext.Provider>\r\n      </div>\r\n      {\r\n        loading && <Loading />\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","F:\\Jujiu\\react\\jujiu-design\\juiu-design-doc\\src\\utils\\getLoginState.js",[],"F:\\Jujiu\\react\\jujiu-design\\juiu-design-doc\\src\\components\\privateRoute\\index.tsx",[],"F:\\Jujiu\\react\\jujiu-design\\juiu-design-doc\\src\\utils\\BGParticle.js",[],["94","95"],"F:\\Jujiu\\react\\jujiu-design\\juiu-design-doc\\src\\views\\login\\loginForm.tsx",["96","97"],"import { FC, useContext, useState } from 'react';\r\nimport {Input} from 'juiu-design';\r\nimport { useHistory, withRouter } from \"react-router-dom\";\r\nimport { LoginContext } from './index';\r\nimport classNames from 'classnames';\r\n\r\n\r\ninterface LoginFormOptions {\r\n  className: string\r\n}\r\n\r\nconst LoginForm: FC<LoginFormOptions> = (props) => {\r\n  const { className } = props\r\n  const [iconStyle, setIconStyle] = useState(-1)\r\n  const [user, setUser] = useState(\"\")\r\n  const [password, setPassword] = useState(\"\")\r\n  const context = useContext(LoginContext)\r\n  const changeLoad = context.ChangeLoad as (val: boolean) => void\r\n  const changeLoginView = context.ChangeLoginView as (val: boolean) => void\r\n  const classes = classNames('login-form', className)\r\n  let history = useHistory();\r\n  let timer\r\n  function HandleFocus(type:string) {\r\n    if (type === 'user'){\r\n      setIconStyle(1)\r\n    } else {\r\n      setIconStyle(2)\r\n    }\r\n  }\r\n  function HandleBlur() {\r\n    setIconStyle(-1)\r\n  }\r\n  function HandleChange(e:React.ChangeEvent<HTMLInputElement>, type:string) {\r\n    if (type === 'user') {\r\n      setUser(e.target.value)\r\n    } else {\r\n      setPassword(e.target.value)\r\n    }\r\n  }\r\n  function submit() {\r\n    if (!user || !password) {\r\n      alert('请输入用户名或密码！')\r\n      return\r\n    }\r\n    changeLoad(true) \r\n    timer = setTimeout(() => {\r\n      localStorage.setItem('jujiu-admin-user', user)\r\n      history.push('/home')\r\n      changeLoad(false)\r\n    }, 500);\r\n  }\r\n  function toRegister() {\r\n    changeLoginView(false)\r\n    // setTimeout(() => props.form.resetFields(), 500)\r\n  }\r\n\r\n  const focus = {\r\n    width: '20px',\r\n    opacity: 1\r\n  }\r\n  return (\r\n    <div className={classes}>\r\n      <h3>管理员登录</h3>\r\n      <div className=\"form-content\">\r\n        <div className=\"user\">\r\n          <i className=\"iconfont iconyonghu\" style={iconStyle === 1 ? focus : {}}></i>\r\n          <Input placeholder=\"用户名\" value={user} onChange={(e) => HandleChange(e,'user')} onFocus={()=>HandleFocus('user')} onBlur={ HandleBlur }/>\r\n        </div>\r\n        <div className=\"password\">\r\n          <i className=\"iconfont iconmimacopy\" style={iconStyle === 2? focus: {}}></i>\r\n          <Input placeholder=\"密码\" value={password} onChange={(e) => HandleChange(e,'password')} onFocus={()=>HandleFocus('password')} onBlur={ HandleBlur }/>\r\n        </div>\r\n        <div className=\"bottom-button\">\r\n          <span onClick={ submit }>登录</span>\r\n          <span onClick={ toRegister }>注册</span>\r\n        </div>\r\n        <span className=\"prompt\">欢迎登陆后台管理系统</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default LoginForm","F:\\Jujiu\\react\\jujiu-design\\juiu-design-doc\\src\\components\\loading\\index.tsx",[],"F:\\Jujiu\\react\\jujiu-design\\juiu-design-doc\\src\\views\\login\\registerForm.tsx",["98","99"],"import { FC, useContext, useState } from 'react';\r\nimport { useHistory, withRouter } from \"react-router-dom\";\r\nimport {Input} from 'juiu-design';\r\nimport { LoginContext } from './index'\r\nimport classNames from 'classnames'\r\n\r\ninterface RegisterFormOptions {\r\n  className: string\r\n}\r\n\r\nconst RegisterForm: FC<RegisterFormOptions> = (props) => {\r\n  const { className } = props\r\n  const [iconStyle, setIconStyle] = useState(-1)\r\n  const [user, setUser] = useState(\"\")\r\n  const [password, setPassword] = useState(\"\")\r\n  const context = useContext(LoginContext)\r\n  const changeLoad = context.ChangeLoad as (val: boolean) => void\r\n  const changeLoginView = context.ChangeLoginView as (val: boolean) => void\r\n  const classes = classNames('login-form', className)\r\n  let history = useHistory();\r\n  let timer\r\n  function HandleFocus(type:string) {\r\n    if (type === 'user'){\r\n      setIconStyle(1)\r\n    } else {\r\n      setIconStyle(2)\r\n    }\r\n  }\r\n  function HandleBlur() {\r\n    setIconStyle(-1)\r\n  }\r\n  function HandleChange(e:React.ChangeEvent<HTMLInputElement>, type:string) {\r\n    if (type === 'user') {\r\n      setUser(e.target.value)\r\n    } else {\r\n      setPassword(e.target.value)\r\n    }\r\n  }\r\n  function register() {\r\n    if (!user || !password) {\r\n      alert('请输入用户名或密码！')\r\n      return\r\n    }\r\n    changeLoad(true) \r\n    timer = setTimeout(() => {\r\n      localStorage.setItem('jujiu-admin-user', user)\r\n      history.push('/home')\r\n      changeLoad(false)\r\n    }, 500);\r\n  }\r\n  function toSubmit() {\r\n    changeLoginView(true)\r\n  }\r\n  const focus = {\r\n    width: '20px',\r\n    opacity: 1\r\n  }\r\n  return (\r\n    <div className={ classes }>\r\n      <h3>管理员注册</h3>\r\n      <div className=\"form-content\">\r\n        <div className=\"user\">\r\n          <i className=\"iconfont iconyonghu\" style={iconStyle === 1 ? focus : {}}></i>\r\n          <Input placeholder=\"用户名\" value={user} onChange={(e) => HandleChange(e,'user')} onFocus={()=>HandleFocus('user')} onBlur={ HandleBlur }/>\r\n        </div>\r\n        <div className=\"password\">\r\n          <i className=\"iconfont iconmimacopy\" style={iconStyle === 2? focus: {}}></i>\r\n          <Input placeholder=\"密码\" value={password} onChange={(e) => HandleChange(e,'password')} onFocus={()=>HandleFocus('password')} onBlur={ HandleBlur }/>\r\n        </div>\r\n        <div className=\"bottom-button\">\r\n          <span onClick={ register }>注册</span>\r\n          <span onClick={ toSubmit }>登录</span>\r\n        </div>\r\n        <span className=\"prompt\">欢迎注册后台管理系统</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default RegisterForm","F:\\Jujiu\\react\\jujiu-design\\juiu-design-doc\\src\\utils\\pagesUtils.ts",["100"],{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":1,"column":21,"nodeType":"107","messageId":"108","endLine":1,"endColumn":33},{"ruleId":"105","severity":1,"message":"109","line":4,"column":3,"nodeType":"107","messageId":"108","endLine":4,"endColumn":11},{"ruleId":"105","severity":1,"message":"110","line":5,"column":3,"nodeType":"107","messageId":"108","endLine":5,"endColumn":8},{"ruleId":"105","severity":1,"message":"111","line":8,"column":3,"nodeType":"107","messageId":"108","endLine":8,"endColumn":13},{"ruleId":"105","severity":1,"message":"112","line":9,"column":3,"nodeType":"107","messageId":"108","endLine":9,"endColumn":10},{"ruleId":"105","severity":1,"message":"113","line":14,"column":24,"nodeType":"107","messageId":"108","endLine":14,"endColumn":43},{"ruleId":"114","severity":1,"message":"115","line":34,"column":54,"nodeType":"116","messageId":"117","endLine":34,"endColumn":56},{"ruleId":"114","severity":1,"message":"115","line":38,"column":17,"nodeType":"116","messageId":"117","endLine":38,"endColumn":19},{"ruleId":"101","replacedBy":"118"},{"ruleId":"103","replacedBy":"119"},{"ruleId":"105","severity":1,"message":"120","line":81,"column":11,"nodeType":"107","messageId":"108","endLine":81,"endColumn":26},{"ruleId":"101","replacedBy":"121"},{"ruleId":"103","replacedBy":"122"},{"ruleId":"105","severity":1,"message":"123","line":7,"column":10,"nodeType":"107","messageId":"108","endLine":7,"endColumn":16},{"ruleId":"101","replacedBy":"124"},{"ruleId":"103","replacedBy":"125"},{"ruleId":"105","severity":1,"message":"126","line":3,"column":22,"nodeType":"107","messageId":"108","endLine":3,"endColumn":32},{"ruleId":"105","severity":1,"message":"127","line":46,"column":5,"nodeType":"107","messageId":"108","endLine":46,"endColumn":10},{"ruleId":"105","severity":1,"message":"126","line":2,"column":22,"nodeType":"107","messageId":"108","endLine":2,"endColumn":32},{"ruleId":"105","severity":1,"message":"127","line":45,"column":5,"nodeType":"107","messageId":"108","endLine":45,"endColumn":10},{"ruleId":"114","severity":1,"message":"115","line":24,"column":19,"nodeType":"116","messageId":"117","endLine":24,"endColumn":21},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"@typescript-eslint/no-unused-vars","'ReactElement' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'Route' is defined but never used.","'useHistory' is defined but never used.","'NavLink' is defined but never used.","'PrivateRouteOptions' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["128"],["129"],"'BaseButtonProps' is defined but never used.",["128"],["129"],"'Button' is defined but never used.",["128"],["129"],"'withRouter' is defined but never used.","'timer' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]